-- In this project, I look at the Chinook database to pull insights from the data within and analyze various questions using SQL

-- Show customers (their full names, customer ID and country) who are not located in the USA
SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country <> 'USA';

-- Show customers from Brazil only
SELECT FirstName, LastName, CustomerId, Country 
FROM chinook.customers 
WHERE Country = 'Brazil';

-- Show invoices of customers from Brazil, including their full name, invoice id, date of invoice and billing country
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry 
FROM chinook.customers cust
RIGHT JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId 
WHERE inv.BillingCountry = 'Brazil';

-- Show employees who are Sales Agents
SELECT EmployeeId, FirstName, LastName, Title 
FROM chinook.employees 
WHERE Title = 'Sales Support Agent';

-- Show the unique/distinct billing countries from the Invoice table
SELECT DISTINCT BillingCountry 
FROM chinook.invoices 
ORDER BY BillingCountry ASC;

-- Show invoices associated with each Sales Agent
SELECT emp.FirstName, emp.LastName, inv.InvoiceId 
FROM chinook.employees emp 
JOIN chinook.customers cust
ON cust.SupportRepId = emp.EmployeeId 
JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId;

-- Show invoice total, customer name, country and sales agent name for all invoices and customers
SELECT inv.Total, cust.FirstName, cust.LastName, cust.Country, emp.FirstName || ' ' || emp.LastName AS sales_agent_name 
FROM chinook.invoices inv 
JOIN chinook.customers cust 
ON cust.CustomerId = inv.CustomerId 
JOIN chinook.employees emp 
ON emp.EmployeeId = cust.SupportRepId;

-- Show how many invoices there were for 2009
SELECT COUNT(*) AS total_invoices_2009 
FROM chinook.invoices 
WHERE InvoiceDate LIKE '2009%';

-- Show total sales for 2009
SELECT SUM(Total) AS total_sales_2009 
FROM chinook.invoices 
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';
-- The above section utilizes a secondary method for pulling the correct dates

-- Show purchased track name with each invoice line ID
SELECT track.Name, inv_item.InvoiceLineId 
FROM chinook.tracks track 
JOIN chinook.invoice_items inv_item 
ON inv_item.TrackId = track.TrackId;

-- Show purchased track name and artist name with each invoice line ID
SELECT track.Name AS track_name, artist.Name AS artist_name, inv_item.InvoiceLineId 
FROM chinook.tracks track 
JOIN chinook.albums album 
ON album.AlbumId = track.AlbumId 
JOIN chinook.artists artist 
ON artist.ArtistId = album.ArtistId
JOIN chinook.invoice_items inv_item 
ON inv_item.TrackId = track.TrackId;

-- Show all tracks and include the album name, media type and genre
SELECT track.Name AS track_name, album.Title AS album_name, media_type.Name AS media_type_name, genre.Name AS genre_name
FROM chinook.tracks track
JOIN chinook.Albums album 
ON album.AlbumId = track.AlbumId
JOIN chinook.Media_Types media_type
ON media_type.MediaTypeId = track.MediaTypeId
JOIN chinook.Genres genre
ON genre.GenreId = track.GenreId;

-- Show total sales made by each sales agent
SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.Total), 2) AS total_sales 
FROM chinook.employees emp 
JOIN chinook.customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId 
GROUP BY emp.FirstName, emp.LastName;

-- Show which sales agent made the most sales in 2009
SELECT emp.FirstName, emp.LastName, ROUND(SUM(inv.Total), 2) AS total_sales_2009 
FROM chinook.employees emp 
JOIN chinook.customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.invoices inv 
ON inv.CustomerId = cust.CustomerId 
WHERE inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName 
ORDER BY ROUND(SUM(inv.Total), 2) DESC 
LIMIT 1;
